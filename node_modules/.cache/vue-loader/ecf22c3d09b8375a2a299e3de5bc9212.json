{"remainingRequest":"C:\\Users\\Alexander\\Documents\\GitHub\\Roomacle\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Alexander\\Documents\\GitHub\\Roomacle\\src\\components\\Calender.vue?vue&type=style&index=0&id=199eaeea&scoped=true&lang=css&","dependencies":[{"path":"C:\\Users\\Alexander\\Documents\\GitHub\\Roomacle\\src\\components\\Calender.vue","mtime":1616443256978},{"path":"C:\\Users\\Alexander\\Documents\\GitHub\\Roomacle\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Alexander\\Documents\\GitHub\\Roomacle\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"C:\\Users\\Alexander\\Documents\\GitHub\\Roomacle\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"C:\\Users\\Alexander\\Documents\\GitHub\\Roomacle\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Alexander\\Documents\\GitHub\\Roomacle\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCg0KdGFibGUsDQp0ZCwNCnRoIHsNCiAgYm9yZGVyOiAxcHggc29saWQgYmxhY2s7DQogIHBhZGRpbmc6IDA7DQp9DQojdGFibGUxIHsNCiAgYm9yZGVyLXNwYWNpbmc6IDA7DQp9DQpidXR0b24gew0KICBtYXJnaW46IDA7DQogIHBhZGRpbmc6IDA7DQogIGhlaWdodDogMTAwJTsNCiAgd2lkdGg6IDEwMCU7DQogIGJvcmRlcjogMDsNCn0NCg=="},{"version":3,"sources":["Calender.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Calender.vue","sourceRoot":"src/components","sourcesContent":["<template>\r\n  <div style=\"overflow: scroll; width: 85%\">\r\n    <v-dialog />\r\n    <table id=\"table1\" style=\"width: 100%; table-layout: fixed\">\r\n      <tr>\r\n        <th style=\"width: 20%\">Std</th>\r\n        <th>Mo</th>\r\n        <th>Di</th>\r\n        <th>Mi</th>\r\n        <th>Do</th>\r\n        <th>Fr</th>\r\n        <th>Sa</th>\r\n      </tr>\r\n      <tr v-for=\"(n, hour_index) in db.time\" :key=\"hour_index\">\r\n        <td>\r\n          <div\r\n            style=\"\r\n              display: inline-flex;\r\n              flex-grow: 3;\r\n              float: left;\r\n              padding-left: 5px;\r\n            \"\r\n          >\r\n            {{ hour_index + 1 }}.\r\n          </div>\r\n          <div\r\n            style=\"\r\n              display: inline-flex;\r\n              flex-grow: 1;\r\n              float: right;\r\n              padding-right: 5px;\r\n            \"\r\n          >\r\n            {{ db.time[hour_index].tStart }}-{{ db.time[hour_index].tEnd }}\r\n          </div>\r\n        </td>\r\n        <td\r\n          :id=\"10 * (hour_index + 1) + day_index + 1\"\r\n          v-for=\"(n, day_index) in 6\"\r\n        >\r\n          <button\r\n            @click=\"openModal(10 * (hour_index + 1) + day_index + 1)\"\r\n            :disabled=\"true\"\r\n            style=\"color: white; background: white\"\r\n          >\r\n            {{ hour_index + 1 }} - {{ day_index + 1 }}\r\n          </button>\r\n        </td>\r\n      </tr>\r\n    </table>\r\n    <!--<button @click=\"resetCalender\">Reset Calender</button>-->\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport db from \"../assets/data.json\";\r\nexport default {\r\n  components: {},\r\n  data() {\r\n    return {\r\n      db,\r\n      button_db_connect: [],\r\n    };\r\n  },\r\n  computed: {\r\n    weekStartDay() {\r\n      return this.$store.state.calender.weekStart.day;\r\n    },\r\n  },\r\n  methods: {\r\n    writeCalender() {\r\n      this.resetCalender();\r\n      //console.log('write calender');\r\n      let connection = [];\r\n      /*console.log(\"Connect-Array auf 0 gesetzt\");\r\n      console.log(connection);*/\r\n\r\n      let weekStartDay = this.$store.state.calender.weekStart.day;\r\n      let weekStartMonth = this.$store.state.calender.weekStart.month;\r\n      let weekStartYear = this.$store.state.calender.weekStart.year;\r\n\r\n      let weekStartDate = new Date(\r\n        weekStartYear,\r\n        weekStartMonth - 1,\r\n        weekStartDay\r\n      );\r\n\r\n      weekStartDate.setHours(0, 0, 0, 0);\r\n      //console.log(weekStartDate);\r\n\r\n      let weekEndDay = this.$store.state.calender.weekEnd.day;\r\n      let weekEndMonth = this.$store.state.calender.weekEnd.month;\r\n      let weekEndYear = this.$store.state.calender.weekEnd.year;\r\n\r\n      let weekEndDate = new Date(weekEndYear, weekEndMonth - 1, weekEndDay);\r\n      weekEndDate.setHours(0, 0, 0, 0);\r\n      //console.log(weekEndDate);\r\n\r\n      for (const index in this.db.veranstaltungen) {\r\n        if (Object.hasOwnProperty.call(this.db.veranstaltungen, index)) {\r\n          const element = this.db.veranstaltungen[index];\r\n          let dt = new Date(element.date);\r\n          dt.setHours(0, 0, 0, 0);\r\n          //console.log(dt);\r\n          //console.log(weekEndDate);\r\n          if (dt >= weekStartDate && dt <= weekEndDate) {\r\n            //console.log(element);\r\n            let day = new Date(element.date).getDay();\r\n            //console.log(day);\r\n            let cellID = 'v' + element.std * 10 + day;\r\n            let buttonName = element.name_short;\r\n            let cell = document.getElementById(cellID);\r\n            cell.firstChild.innerText = buttonName;\r\n            cell.firstChild.style.background = \"lightgrey\";\r\n            cell.firstChild.style.color = \"black\";\r\n            cell.firstChild.disabled = false;\r\n            /*console.log(\r\n            \"Updated Button-text in cell with ID: \" +\r\n              cellID +\r\n              \" to \" +\r\n              buttonName\r\n          );*/\r\n            let combi = [cellID, element._id];\r\n            connection.push(combi);\r\n          }\r\n        }\r\n      }\r\n      /*console.log(\"Connect-Array erstellt\");\r\n      console.log(connection);*/\r\n      this.button_db_connect = connection;\r\n      console.log(this.button_db_connect);\r\n    },\r\n    resetCalender() {\r\n      for (let hour_index = 0; hour_index < db.time.length; hour_index++) {\r\n        for (let day_index = 0; day_index < 6; day_index++) {\r\n          let CellID = (hour_index + 1) * 10 + day_index + 1;\r\n          let cell = document.getElementById(CellID);\r\n          cell.firstChild.innerText = \"\";\r\n          cell.firstChild.style.background = \"white\";\r\n          cell.firstChild.style.color = \"white\";\r\n          cell.firstChild.disabled = true;\r\n        }\r\n      }\r\n    },\r\n    //error when cellID = buttonid ?!?\r\n    openModal(CellID) {\r\n      console.log(CellID);\r\n      let connectIndex = this.button_db_connect.findIndex((element) =>\r\n        element.includes(CellID)\r\n      );\r\n      let vIndex = this.button_db_connect[connectIndex][1];\r\n      let data = this.db.veranstaltungen[vIndex];\r\n      this.$modal.show(\"dialog\", {\r\n        title: data.name,\r\n        text: `Veranstaltung: ${data.name} <br>\r\n        Veranstaltungsnummer: ${data.num}<br>\r\n        Datum: ${data.date}`,\r\n      });\r\n    },\r\n    getRandomRgb(index) {\r\n      var num = Math.round(0xffffff * Math.random());\r\n      var r = num >> 16;\r\n      var g = (num >> 8) & 255;\r\n      var b = num & 255;\r\n      document.getElementById(index).style.backgroundColor =\r\n        \"rgb(\" + r + \", \" + g + \", \" + b + \")\";\r\n    },\r\n  },\r\n  watch: {\r\n    weekStartDay: function () {\r\n      //console.log('Changed weekStartDay');\r\n      this.writeCalender();\r\n    },\r\n  },\r\n  mounted() {\r\n    this.writeCalender();\r\n  },\r\n  created() {},\r\n};\r\n</script>\r\n\r\n\r\n\r\n\r\n<style scoped>\r\ntable,\r\ntd,\r\nth {\r\n  border: 1px solid black;\r\n  padding: 0;\r\n}\r\n#table1 {\r\n  border-spacing: 0;\r\n}\r\nbutton {\r\n  margin: 0;\r\n  padding: 0;\r\n  height: 100%;\r\n  width: 100%;\r\n  border: 0;\r\n}\r\n</style>"]}]}